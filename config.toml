baseURL = "https://defaria.io"
title = "thiago de faria, data at heart and cto"
theme = "hugo-coder"
languageCode = "en"
defaultcontentlanguage = "en"

paginate = 20
canonifyurls = true

pygmentsstyle = "b2"
pygmentscodefences = true
pygmentscodefencesguesssyntax = true


[params]
    author = "Thiago de Faria"
    info = "Data at heart and CTO"
    description = "Thiago de Faria's personal website"
    keywords = "devops, AI, ML, mlops"
    avatarurl = "images/avatar.jpg"
 
    footercontent = " "

    dateformat = "January 2, 2006"

    hideFooter = false
    hidecredits = false
    hidecopyright = false
    since = 2020
 
    # Git Commit in Footer, uncomment the line below to enable it.
    commit = "https://github.com/luizdepra/hugo-coder/tree/"

    # Specify light/dark colorscheme
    # Supported values:
    # "auto" (use preference set by browser)
    # "dark" (dark background, light foreground)
    # "light" (light background, dark foreground) (default)
    colorscheme = "dark"
 
    # Series see also post count
    maxSeeAlsoItems = 5

    # Enable Twemoji
    enableTwemoji = true

    # Custom CSS
    custom_css = []

    # Custom JS
    custom_js = []

# Social links
[[params.social]]
    name = "Twitter"
    icon = "fab fa-twitter"
    weight = 1
    url = "https://twitter.com/thiagoavadore/"
[[params.social]]
    name = "LinkedIn"
    icon = "fab fa-linkedin"
    weight = 2
    url = "https://www.linkedin.com/in/thiagoavadore/"

# Menu links
[[menu.main]]
    name = "Speaking"
    weight = 1
    url = "speaking/"
[[menu.main]]
    name = "Contact me"
    weight = 2
    url = "contact/"

[deployment]

[[deployment.targets]]
# An arbitrary name for this target.
name = "myS3Bucket"


# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
URL = "s3://defaria.io?region=eu-west-1"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# Samples:

[[deployment.matchers]]
#  Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true
